name: Python Tests

on:
  push:
    branches: [ master, main ]
    paths:
      - 'py/**'
      - '.github/workflows/python-tests.yml'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'py/**'
      - '.github/workflows/python-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('py/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd py
        python -m pip install --upgrade pip
        python -m pip install -e .

    - name: Install dev dependencies
      run: |
        cd py
        python -m pip install -e .[dev]

    - name: Run tests with pytest
      run: |
        cd py
        python -m pytest -v --tb=short

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          py/.pytest_cache/
          py/test-*.xml
        retention-days: 7
        if-no-files-found: ignore

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('py/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-

    - name: Install dependencies
      run: |
        cd py
        python -m pip install --upgrade pip
        python -m pip install -e .[dev]

    - name: Run ruff linter
      run: |
        cd py
        python -m ruff check . --output-format=github
      continue-on-error: true

    - name: Run ruff formatter check
      run: |
        cd py
        python -m ruff format --check .
      continue-on-error: true

    - name: Run mypy type checker
      run: |
        cd py
        python -m mypy . --ignore-missing-imports
      continue-on-error: true

  summary:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()
    
    steps:
    - name: Check overall status
      run: |
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ All Python tests passed!"
        else
          echo "❌ Some Python tests failed"
          exit 1
        fi
        
        if [ "${{ needs.lint.result }}" == "success" ]; then
          echo "✅ Code quality checks passed!"
        else
          echo "⚠️ Code quality checks had issues (non-blocking)"
        fi

