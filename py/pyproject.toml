[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "retrobus-explorer"
version = "0.1.0"
description = "RetroComputing bus exploration tools and FPGA gateware"
requires-python = ">=3.10"
dependencies = [
    "pytest>=6.0",
    "pillow>=8.0",
    "pandas>=1.3",
    "fastapi>=0.68",
    "uvicorn>=0.15",
]

[tool.setuptools.packages.find]
include = ["z80bus*", "d3xx*", "shared*"]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
]

# https://docs.marimo.io/guides/editor_features/language_server/#installation
[tool.marimo.experimental]
lsp = true

# Language server configuration
[tool.marimo.language_servers.pylsp]
enabled = true               # Enable/disable the Python language server
enable_mypy = true           # Type checking with mypy (enabled by default, if installed)
enable_ruff = true           # Linting with ruff (enabled by default, if installed)
enable_flake8 = false        # Linting with flake8
enable_pydocstyle = false    # Check docstring style
enable_pylint = false        # Linting with pylint
enable_pyflakes = false      # Syntax checking with pyflakes

# Diagnostics configuration
[tool.marimo.diagnostics]
enabled = true               # Show diagnostics in the editor

# Ruff configuration
[tool.ruff]
# Set target Python version to match project requirements
target-version = "py310"

# Configure per-file ignores for different modules
[tool.ruff.lint.per-file-ignores]
# d3xx is a ctypes binding library - allow common ctypes patterns
"d3xx/*.py" = [
    "F403",  # Star imports (from ctypes import *)
    "F405",  # Undefined names from star imports
    "F401",  # Unused imports
    "E402",  # Module level import not at top of file
    "E712",  # Avoid equality comparisons to True/False
    "E741",  # Ambiguous variable names
]
# Test files - allow some test-specific patterns
"**/test_*.py" = [
    "F401",  # Unused imports in tests
    "F821",  # Undefined names (test fixtures)
    "E721",  # Type comparisons (tests often use type() == type())
    "F541",  # f-string without placeholders
    "E711",  # Comparison to None
]
# Legacy scripts and modules - allow common legacy patterns
"*.py" = [
    "F811",  # Redefinition of unused variables
    "E402",  # Module level import not at top of file
    "F401",  # Unused imports
    "E711",  # Comparison to None
    "F841",  # Local variable assigned but never used
    "E722",  # Do not use bare except
    "F541",  # f-string without placeholders
]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
