[project]
name = "universal-level-shifter"
version = "0.1.0"
description = "RetroBus Explorer - Hardware/software tools for interfacing with legacy 5V computer systems"
readme = "../README.md"
requires-python = ">=3.9"
dependencies = [
    "marimo>=0.5.0",
    "protobuf>=4.0.0",
    "pytest>=7.0.0",
    "Pillow>=9.0.0",
    "pandas>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "mypy",
    "types-protobuf",
    "ruff",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_backend"

[tool.pytest.ini_options]
testpaths = [".", "z80bus"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
    "F403", # from module import * used
    "F405", # may be undefined from star imports
]

[tool.ruff.lint.isort]
known-third-party = ["marimo", "protobuf"]

# https://docs.marimo.io/guides/editor_features/language_server/#installation

[tool.marimo.experimental]
lsp = true

# Language server configuration
[tool.marimo.language_servers.pylsp]
enabled = true               # Enable/disable the Python language server
enable_mypy = true           # Type checking with mypy (enabled by default, if installed)
enable_ruff = true           # Linting with ruff (enabled by default, if installed)
enable_flake8 = false        # Linting with flake8
enable_pydocstyle = false    # Check docstring style
enable_pylint = false        # Linting with pylint
enable_pyflakes = false      # Syntax checking with pyflakes

# Diagnostics configuration
[tool.marimo.diagnostics]
enabled = true               # Show diagnostics in the editor

