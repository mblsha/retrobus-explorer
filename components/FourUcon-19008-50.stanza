#use-added-syntax(jitx)
defpackage components/FourUcon-19008-50:
  import core
  import jitx
  import jitx/commands

  import jsl

  ; HashTable
  import collections

  ; setup-design
  import helpers

val pad_width = 0.25
val pad_height = 2.0

val plastic_width = 15.20 ; from table A: 50 pin
val plastic_height = 4.0

pcb-pad capsule-smd-pad :
  name = "capsule-smd-pad"
  type = SMD

  val _w = pad_width
  val _h = pad_height
  val _reduce = 0.1 ; not sure why it's needed: JITX seems to reduce shape from SolderMask and Paste layers by a small amount

  shape = Rectangle(_w - _reduce, _h - _reduce)
  layer(SolderMask(Top)) = Rectangle(_w, _h)
  layer(Paste(Top))      = Rectangle(_w, _h)

pcb-landpattern lp :
  val num_pads = 50

  val drill_hole_span_per_side = 13.90 ; from table D: 50 pin
  val drill_hole_offset_from_center = 1.25
  val drill_hole_diameter = 0.55

  val pads_per_side = num_pads / 2
  val pad_span_per_side = 12.0 ; from table B: 50 pin
  val distance_between_pad_rows = 2.40
  val pad_pitch = pad_span_per_side / (to-double(pads_per_side) - 1.0)
  val pad_offset_x = pad_span_per_side / -2.0

  ; FIXME: make this a parameter?
  ;
  ; use `true` if only want to route the connectors on the bottom part
  ; of the Alchitry Au Element module
  val flip_sides = true

  for i in 0 to pads_per_side do:
    val x = pad_offset_x + (pad_pitch * to-double(i))
    val y = pad_height / 2.0 + distance_between_pad_rows / 2.0
    val computed_i =
      if flip_sides :
        num_pads - 1 - i
      else :
        i
    pad p[computed_i] : capsule-smd-pad at loc(x, y * -1.0) on Top

  for i in 0 to pads_per_side do:
    val x = pad_offset_x + (pad_pitch * to-double(i))
    val y = pad_height / 2.0 + distance_between_pad_rows / 2.0
    val computed_i =
      if flip_sides :
        pads_per_side - 1 - i
      else :
        pads_per_side + i
    pad p[computed_i] : capsule-smd-pad at loc(x * -1.0, y * 1.0) on Top

  layer(Silkscreen("F-SilkS", Top)) = Polyline(0.2, [
    Point(plastic_width / -2.0, plastic_height / -2.0),
    Point(plastic_width / -2.0, -0.5),
    Point(plastic_width / -2.0 + 0.3, -0.5),
    Point(plastic_width / -2.0 + 0.3,  0.5),
    Point(plastic_width / -2.0, 0.5),
    Point(plastic_width / -2.0, plastic_height /  2.0),
    Point(plastic_width /  2.0, plastic_height /  2.0),
    Point(plastic_width /  2.0, plastic_height / -2.0),
    Point(plastic_width / -2.0, plastic_height / -2.0)])

  val first_pad_circle_factor =
    if flip_sides :
      2.0
    else :
      -2.0
  layer(Silkscreen("F-SilkS", Top)) =
    Circle(Point((pad_span_per_side + 1.0) / -2.0,
                 (distance_between_pad_rows + pad_height * 1.0 + 0.5) / first_pad_circle_factor), 0.3)

  layer(Cutout()) = Circle(Point(drill_hole_span_per_side / 2.0,  drill_hole_offset_from_center * -1.0), drill_hole_diameter / 2.0)
  layer(Cutout()) = Circle(Point(drill_hole_span_per_side / -2.0, drill_hole_offset_from_center * -1.0), drill_hole_diameter / 2.0)


public pcb-component component :
  name = "4UCON-19008-50"
  description = "Connector, 0.5mm Board-to-Board, Double Slot Type Female, SMT 180Â° with Post, Stacking Height=5.5/6.0mm, with Cap, 50 Pins"
  manufacturer = "4UCON"
  datasheet = "http://www.4uconnector.com/online/object/4udrawing/19008.pdf"
  reference-prefix = "J"

  ; pin-properties :
  ;   [pin:Ref      | pads:Int ... | side:Dir ]
  ;   [PINNAME1     | 1            | Left     ]
  ;   [PINNAME2     | 2            | Right    ]

  val box = BoxSymbol(self)
  val symb = create-symbol(box)
  assign-symbol(symb)

  assign-landpattern(lp)


; Alchitry Au pinout:
; https://cdn.sparkfun.com/assets/a/2/2/0/a/alchitry_au_sch_update-2.pdf
;
; NOTE: the pinout is from the top side of the Alchitry Au board, so if want
;       to route the pins on the bottom side of the element, need to flip the
;       pinout

public pcb-component alchitry_a :
  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir ]
      [VCC5V    | 0 49                      | Left ]
      [GND      | 3 9 15 21 28 34 40 46     | Left ]
      [VCC3V3   | 6 12 18 24 25 31 37 43    | Left ]
      [T8       | 1                         | Left ]
      [T7       | 2                         | Left ]
      [T5       | 4                         | Left ]
      [R5       | 5                         | Left ]
      [R8       | 7                         | Left ]
      [P8       | 8                         | Left ]
      [L2       | 10                        | Left ]
      [L3       | 11                        | Left ]
      [J1       | 13                        | Left ]
      [K1       | 14                        | Left ]
      [H1       | 16                        | Left ]
      [H2       | 17                        | Left ]
      [G1       | 19                        | Left ]
      [G2       | 20                        | Left ]
      [K5       | 22                        | Left ]
      [E6       | 23                        | Left ]
      [M6       | 26                        | Right ]
      [N6       | 27                        | Right ]
      [H5       | 29                        | Right ]
      [H4       | 30                        | Right ]
      [J3       | 32                        | Right ]
      [H3       | 33                        | Right ]
      [J5       | 35                        | Right ]
      [J4       | 36                        | Right ]
      [K3       | 38                        | Right ]
      [K2       | 39                        | Right ]
      [N9       | 41                        | Right ]
      [P9       | 42                        | Right ]
      [R7       | 44                        | Right ]
      [R6       | 45                        | Right ]
      [T9       | 47                        | Right ]
      [T10      | 48                        | Right ]




  assign-symbol(create-symbol(BoxSymbol(self)))
  assign-landpattern(lp)

  supports power:
    power.V+ => self.VCC3V3
    power.V- => self.GND

public pcb-component alchitry_b :
  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir ]
      [VCC5V    | 0 49                      | Left ]
      [GND      | 3 9 15 21 28 34 40 46     | Left ]
      [VCC3V3   | 6 12 18 24 25 31 37 43    | Left ]
      [D1       | 1                         | Left ]
      [E2       | 2                         | Left ]
      [A2       | 4                         | Left ]
      [B2       | 5                         | Left ]
      [E1       | 7                         | Left ]
      [F2       | 8                         | Left ]
      [F3       | 10                        | Left ]
      [F4       | 11                        | Left ]
      [A3       | 13                        | Left ]
      [B4       | 14                        | Left ]
      [A4       | 16                        | Left ]
      [A5       | 17                        | Left ]
      [B5       | 19                        | Left ]
      [B6       | 20                        | Left ]
      [A7       | 22                        | Left ]
      [B7       | 23                        | Left ]
      [C7       | 26                        | Right ]
      [C6       | 27                        | Right ]
      [D6       | 29                        | Right ]
      [D5       | 30                        | Right ]
      [F5       | 32                        | Right ]
      [E5       | 33                        | Right ]
      [G5       | 35                        | Right ]
      [G4       | 36                        | Right ]
      [D4       | 38                        | Right ]
      [C4       | 39                        | Right ]
      [E3       | 41                        | Right ]
      [D3       | 42                        | Right ]
      [C3       | 44                        | Right ]
      [C2       | 45                        | Right ]
      [C1       | 47                        | Right ]
      [B1       | 48                        | Right ]

  assign-symbol(create-symbol(BoxSymbol(self)))
  assign-landpattern(lp)

  supports power:
    power.V+ => self.VCC3V3
    power.V- => self.GND

public pcb-component alchitry_c :
  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir ]
      [VCC5V    | 0 49                      | Left ]
      [GND      | 3 9 15 21 28 34 40 46     | Left ]
      [VCC3V3   | 6 12 18 24 25 31 37 43    | Left ]
      [T13      | 1                         | Left ]
      [R13      | 2                         | Left ]
      [T12      | 4                         | Left ]
      [R12      | 5                         | Left ]
      [R11      | 7                         | Left ]
      [R10      | 8                         | Left ]
      [N2       | 10                        | Left ]
      [N3       | 11                        | Left ]
      [P3       | 13                        | Left ]
      [P4       | 14                        | Left ]
      [M4       | 16                        | Left ]
      [L4       | 17                        | Left ]
      [N4       | 19                        | Left ]
      [M5       | 20                        | Left ]
      [L5       | 22                        | Left ]
      [P5       | 23                        | Left ]
      [T4       | 26                        | Right ]
      [T3       | 27                        | Right ]
      [R3       | 29                        | Right ]
      [T2       | 30                        | Right ]
      [R2       | 32                        | Right ]
      [R1       | 33                        | Right ]
      [N1       | 35                        | Right ]
      [P1       | 36                        | Right ]
      [M2       | 38                        | Right ]
      [M1       | 39                        | Right ]
      [N13      | 41                        | Right ]
      [P13      | 42                        | Right ]
      [N11      | 44                        | Right ]
      [N12      | 45                        | Right ]
      [P10      | 47                        | Right ]
      [P11      | 48                        | Right ]

  assign-symbol(create-symbol(BoxSymbol(self)))
  assign-landpattern(lp)

  supports power:
    power.V+ => self.VCC3V3
    power.V- => self.GND

public pcb-component alchitry_d :
  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir ]
      [VCC5V    | 0 49                      | Left ]
      [GND      | 3 9 15 21 28 34 40 46     | Left ]
      [VCC3V3   | 6 12 18 24 25 31 37 43    | Left ]
      [LED2     | 1                         | Left ]
      [LED3     | 2                         | Left ]
      [LED6     | 4                         | Left ]
      [LED7     | 5                         | Left ]
      [R16      | 7                         | Left ]
      [R15      | 8                         | Left ]
      [P14      | 10                        | Left ]
      [M15      | 11                        | Left ]
      [USB_RX   | 13                        | Left ]
      [USB_TX   | 14                        | Left ]
      [A1V8     | 16 17                     | Left ]
      [VBSEL    | 19                        | Left ]
      [VCC1V8   | 20                        | Left ]
      [N7_TDI   | 22                        | Left ]
      [N8_TDO   | 23                        | Left ]
      [L7_TCK   | 26                        | Right ]
      [M7_TMS   | 27                        | Right ]
      [AVN      | 29                        | Right ]
      [AVP      | 30                        | Right ]
      [AGND     | 32                        | Right ]
      [AVREF    | 33                        | Right ]
      [PROGRAM_B| 35                        | Right ]
      [DONE     | 36                        | Right ]
      [RESET    | 38                        | Right ]
      [F100MHZ  | 39                        | Right ]
      [T14      | 41                        | Right ]
      [T15      | 42                        | Right ]
      [LED5     | 44                        | Right ]
      [LED4     | 45                        | Right ]
      [LED1     | 47                        | Right ]
      [LED0     | 48                        | Right ]

  assign-symbol(create-symbol(BoxSymbol(self)))
  assign-landpattern(lp)

  supports power:
    power.V+ => self.VCC3V3
    power.V- => self.GND

val element_width = 65.0
val element_height = 45.0

; Top: is actually the side that connects to the FPGA
public pcb-module alchitry_element_bottom :
  inst a : alchitry_a
  inst b : alchitry_b
  inst c : alchitry_c
  inst d : alchitry_d

  ; https://github.com/alchitry/Alchitry-Labs-V2/blob/master/src/main/kotlin/com/alchitry/labs2/hardware/pinout/AuPin.kt
  val m = HashTable<String, JITXObject>()
  m["A2"]  = a.T8
  m["A3"]  = a.T7
  m["A5"]  = a.T5
  m["A6"]  = a.R5
  m["A8"]  = a.R8
  m["A9"]  = a.P8
  m["A11"] = a.L2
  m["A12"] = a.L3
  m["A14"] = a.J1
  m["A15"] = a.K1
  m["A17"] = a.H1
  m["A18"] = a.H2
  m["A20"] = a.G1
  m["A21"] = a.G2
  m["A23"] = a.K5
  m["A24"] = a.E6
  m["A27"] = a.M6
  m["A28"] = a.N6
  m["A30"] = a.H5
  m["A31"] = a.H4
  m["A33"] = a.J3
  m["A34"] = a.H3
  m["A36"] = a.J5
  m["A37"] = a.J4
  m["A39"] = a.K3
  m["A40"] = a.K2
  m["A42"] = a.N9
  m["A43"] = a.P9
  m["A45"] = a.R7
  m["A46"] = a.R6
  m["A48"] = a.T9
  m["A49"] = a.T10
  m["B2"]  = b.D1
  m["B3"]  = b.E2
  m["B5"]  = b.A2
  m["B6"]  = b.B2
  m["B8"]  = b.E1
  m["B9"]  = b.F2
  m["B11"] = b.F3
  m["B12"] = b.F4
  m["B14"] = b.A3
  m["B15"] = b.B4
  m["B17"] = b.A4
  m["B18"] = b.A5
  m["B20"] = b.B5
  m["B21"] = b.B6
  m["B23"] = b.A7
  m["B24"] = b.B7
  m["B27"] = b.C7
  m["B28"] = b.C6
  m["B30"] = b.D6
  m["B31"] = b.D5
  m["B33"] = b.F5
  m["B34"] = b.E5
  m["B36"] = b.G5
  m["B37"] = b.G4
  m["B39"] = b.D4
  m["B40"] = b.C4
  m["B42"] = b.E3
  m["B43"] = b.D3
  m["B45"] = b.C3
  m["B46"] = b.C2
  m["B48"] = b.C1
  m["B49"] = b.B1
  m["C2"]  = c.T13
  m["C3"]  = c.R13
  m["C5"]  = c.T12
  m["C6"]  = c.R12
  m["C8"]  = c.R11
  m["C9"]  = c.R10
  m["C11"] = c.N2
  m["C12"] = c.N3
  m["C14"] = c.P3
  m["C15"] = c.P4
  m["C17"] = c.M4
  m["C18"] = c.L4
  m["C20"] = c.N4
  m["C21"] = c.M5
  m["C23"] = c.L5
  m["C24"] = c.P5
  m["C27"] = c.T4
  m["C28"] = c.T3
  m["C30"] = c.R3
  m["C31"] = c.T2
  m["C33"] = c.R2
  m["C34"] = c.R1
  m["C36"] = c.N1
  m["C37"] = c.P1
  m["C39"] = c.M2
  m["C40"] = c.M1
  m["C42"] = c.N13
  m["C43"] = c.P13
  m["C45"] = c.N11
  m["C46"] = c.N12
  m["C48"] = c.P10
  m["C49"] = c.P11
  m["D8"]  = d.R16
  m["D9"]  = d.R15
  m["D11"] = d.P14
  m["D12"] = d.M15
  m["D42"] = d.T14
  m["D43"] = d.T15

  ; https://github.com/alchitry/Alchitry-Labs/blob/master/library/components/ft.acf
  val ft_pins = ["A17" "A18" "A20" "A21" "A27" "A28" "A30" "A31"
                 "B14" "B15" "B17" "B18" "B20" "B21" "B23" "B24"
                 "B27" "B28" "B30" "B31" "B33" "B34" "B36" "B37"]

  var num_safe_pins = 0
  for k in to-seq(m) :
    if not contains?(ft_pins, key(k)) :
      num_safe_pins = num_safe_pins + 1

  ; should be 78 pins when using Ft Element board
  println(append("num_safe_pins: ", to-string(num_safe_pins)))

  port data : pin[num_safe_pins]
  var i = 0
  for k in to-seq(m) :
    if not contains?(ft_pins, key(k)) :
      net (data[i], value(k))
      i = i + 1

  ; includes 2*plastic_height
  val vertical_outer_spacing = 40.0 - plastic_height
  val left_to_side = 5.40
  val distance_a_to_b = 10.3
  val distance_c_to_d = 6.3

  val b_d_offset_left = element_width / -2.0 + left_to_side + plastic_width / 2.0

  place(b) at loc(b_d_offset_left, vertical_outer_spacing / 2.0, 180.0) on Top
  place(a) at loc(b_d_offset_left + distance_a_to_b + plastic_width, vertical_outer_spacing / 2.0, 180.0) on Top

  place(d) at loc(b_d_offset_left, vertical_outer_spacing / -2.0, 180.0) on Top
  place(c) at loc(b_d_offset_left + distance_c_to_d + plastic_width, vertical_outer_spacing / -2.0, 180.0) on Top

; view(component)
; view(alchitry_a)

val board-shape = RoundedRectangle(element_width, element_height, 3.0)
setup-design("jitx-design", board-shape, signal-shrink = 0.5)
set-main-module(alchitry_element_bottom)
view-schematic()
view-board()
