#use-added-syntax(jitx)
defpackage components/GndTestpads :
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/box-symbol
  import jsl

  ; setup-design
  import helpers
  import pose-helpers
  ; pin-header
  import ocdb/utils/generic-components

pcb-landpattern lp (-- diameter:Double, width:Double, height:Double) :
  defn do-pad () :
    circle-pth-circle-pad(diameter / 2.0, diameter, mask = diameter - 0.1)

  val w = width
  val h = height
  pad p[1] : do-pad() at loc(w /  2.0 - diameter, h /  2.0 - diameter) on Top
  pad p[2] : do-pad() at loc(w /  2.0 - diameter, h / -2.0 + diameter) on Top
  pad p[3] : do-pad() at loc(w / -2.0 + diameter, h /  2.0 - diameter) on Top
  pad p[4] : do-pad() at loc(w / -2.0 + diameter, h / -2.0 + diameter) on Top

public pcb-component component (-- diameter:Double, width:Double, height:Double) :
  name = "gnd-testpads"

  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir]
    [GND     | p[1] p[2] p[3] p[4]  | Left]

  val box = BoxSymbol(self)
  assign-symbol $ create-symbol(box)
  assign-landpattern(lp(diameter = diameter, width = width, height = height))

public pcb-module module (-- diameter:Double, width:Double, height:Double) :
  inst c : component(diameter = diameter, width = width, height = height)

  port GND
  net (GND c.GND)

  place(c) at loc(0.0, 0.0) on Top

pcb-module test-module :
  inst tp : module(diameter = 3.0, width = 30.0, height = 18.5)
  place(tp) at loc(0.0, 0.0) on Top


; val board-shape = RoundedRectangle(30.0, 18.5, 0.25)
; setup-design("gnd-testpads", board-shape, signal-shrink = 0.5)
; set-main-module(test-module)
; view-schematic()
; view-board()
